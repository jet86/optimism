#############################
# OMGX replica service
# This service is used to replicate the l2geth
# Please make sure your local L2 is running before starting this service
# 
# NOTE:
# The data transport layer scans L2 from block 1. However, the block number is 0
# when we start the local L2. Please deploy two or three contracts on L2 first so that
# the data transport layer can start correctly.
#  
# RUN:
# cd /ops
# docker-compose -f docker-compose-omgx-replica.yml up
#############################

version: "3"

services:
  dtl-replica:
    image: ethereumoptimism/data-transport-layer
    deploy:
      replicas: 1
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.data-transport-layer
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      -  ./envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
        # used for setting the address manager address
        # PRODUCTION: https://rinkeby-deployer.omgx.network/address.json
        URL: http://host.docker.internal:8080/addresses.json
        # connect to the 2 layers
        # PRODUCTION: https://rinkeby.infura.io/v3/KEY
        DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: http://host.docker.internal:9545
        # PRODUCTION: https://rinkeby.omgx.network
        DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://host.docker.internal:8545
        DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 28
        DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
        # Port
        DATA_TRANSPORT_LAYER__SERVER_PORT: 7879
    ports:
      - ${DTL_PORT:-7879}:7879

  l2geth-replica:
    image: ethereumoptimism/l2geth
    deploy:
      replicas: 1
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        # PRODUCTION: https://rinkeby.infura.io/v3/KEY
        ETH1_HTTP: http://host.docker.internal:8545
        # PRODUCTION: https://rinkeby-deployer.omgx.network/state-dump.latest.json
        ROLLUP_STATE_DUMP_PATH: http://host.docker.internal:8080/state-dump.latest.json
        # used for getting the addresses
        # PRODUCTION: https://rinkeby-deployer.omgx.network/address.json
        URL: http://host.docker.internal:8080/addresses.json
        # connecting to the DTL
        ROLLUP_CLIENT_HTTP: http://dtl-replica:7879
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        # IS_VERIFIER: "true"
        ROLLUP_BACKEND: 'l2'
        ROLLUP_VERIFIER_ENABLE: 'true'
        # PORT
        RPC_PORT: 8547
    ports:
      - ${REPLICA_HTTP_PORT:-8547}:8547
      - ${REPLICA_HTTP_PORT:-8548}:8548


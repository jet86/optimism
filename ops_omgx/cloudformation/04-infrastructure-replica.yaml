AWSTemplateFormatVersion: "2010-09-09"
Description: "Enya Application Infrastructure"

Parameters:

  InfrastructureStackName:
    Description: Infrastructure stack to associate this stack with
    Type: String
    Default: infrastructure-core

Resources:

  LoadBalancerReplicaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "SG for ${AWS::StackName} Replica LB"
      VpcId:
        Fn::ImportValue: !Sub "${InfrastructureStackName}:VpcId"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8545
        ToPort: 8545
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8545
        ToPort: 8545
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8546
        ToPort: 8546
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8546
        ToPort: 8546
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 6001
        ToPort: 6001
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 6001
        ToPort: 6001
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8020
        ToPort: 8020
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8020
        ToPort: 8020
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 5001
        ToPort: 5001
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 5001
        ToPort: 5001
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8081
        ToPort: 8081
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8081
        ToPort: 8081
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8001
        ToPort: 8001
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8001
        ToPort: 8001
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8030
        ToPort: 8030
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8030
        ToPort: 8030
        CidrIpv6: ::/0
      - IpProtocol: tcp
        FromPort: 8040
        ToPort: 8040
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8040
        ToPort: 8040
        CidrIpv6: ::/0
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Replica-LB"

  LoadBalancerReplica:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '3600'
      SecurityGroups:
      - !Ref LoadBalancerReplicaSecurityGroup
      Subnets:
      - Fn::ImportValue: !Sub ${InfrastructureStackName}:PrivateSubnet1
      - Fn::ImportValue: !Sub ${InfrastructureStackName}:PrivateSubnet2

Outputs:
  LoadBalancerReplicaDNSName:
    Value: !GetAtt LoadBalancerReplica.DNSName
    Export:
      Name: !Sub "${InfrastructureStackName}:LoadBalancerReplica:DNSName"
  LoadBalancerReplicaArn:
    Value: !Ref LoadBalancerReplica
    Export:
      Name: !Sub "${InfrastructureStackName}:LoadBalancerReplica:ARN"
